{"version":3,"sources":["App.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","form","this","label","inputForm","type","onChange","pattern","title","required","btnForm","Component","Filter","filter","onInputChange","input","ContactList","contacts","onDeleteContact","contactsList","map","id","contactItem","btnContact","onClick","App","handleNameChange","repeatName","newName","find","deleteContact","oldName","formSubmitHandler","alert","contact","shortid","generate","prevState","getVisibleContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","wrapper","titleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,cAAgB,6B,mBCA5FD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,UAAY,+BAA+B,QAAU,+B,4LCgE5HC,E,4MA7DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,MAAyB,EAAKT,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,EAAKQ,MAAMC,SAASV,EAAMC,GAC1B,EAAKU,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CACZN,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,OACE,uBAAMW,UAAWC,IAAOC,KAAMJ,SAAUK,KAAKR,aAA7C,UACE,wBAAOK,UAAWC,IAAOG,MAAzB,iBAEE,uBACEJ,UAAWC,IAAOI,UAClBC,KAAK,OACLlB,KAAK,OACLK,MAAOU,KAAKhB,MAAMC,KAClBmB,SAAUJ,KAAKb,aACfkB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAOV,UAAWC,IAAOG,MAAzB,mBAEE,uBACEJ,UAAWC,IAAOI,UAClBC,KAAK,MACLlB,KAAK,SACLK,MAAOU,KAAKhB,MAAME,OAClBkB,SAAUJ,KAAKb,aACfkB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQV,UAAWC,IAAOU,QAASL,KAAK,SAAxC,gC,GAtDkBM,a,iBCsBXC,MAtBf,YAA4C,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cACxB,OACE,wBAAOf,UAAWC,IAAOG,MAAzB,kCAEE,uBACEJ,UAAWC,IAAOe,MAClBV,KAAK,OACLlB,KAAK,SACLK,MAAOqB,EACPP,SAAUQ,EACVP,QAAQ,yHACRE,UAAQ,Q,gBCcDO,MAzBf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B,OACE,oBAAInB,UAAWC,IAAOmB,aAAtB,SACGF,EAASG,KAAI,gBAAGC,EAAH,EAAGA,GAAIlC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAaW,UAAWC,IAAOsB,YAA/B,UACGnC,EADH,QACcC,EACZ,wBACEW,UAAWC,IAAOuB,WAClBC,QAAS,kBAAMN,EAAgB/B,IAFjC,sBAFOkC,S,iBC6EFI,E,4MA5EbvC,MAAQ,CACN+B,SAAU,GACVJ,OAAQ,I,EAGVa,iBAAmB,SAAApC,GACjB,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BmC,WAAa,SAAAC,GACX,OAAO,EAAK1C,MAAM+B,SAASY,MAAK,qBAAG1C,OAAoByC,M,EAGzDE,cAAgB,SAAAC,GACd,EAAKtC,SAAS,CACZwB,SAAU,EAAK/B,MAAM+B,SAASJ,QAAO,qBAAG1B,OAAoB4C,Q,EAIhEC,kBAAoB,SAAC7C,EAAMC,GACzB,GAAK,EAAKuC,WAAWxC,GAUnB8C,MAAM,GAAD,OAAI9C,EAAJ,gCAVqB,CAC1B,IAAM+C,EAAU,CACdb,GAAIc,IAAQC,WACZjD,OACAC,UAEF,EAAKK,UAAS,SAAA4C,GAAS,MAAK,CAC1BpB,SAAS,CAAEiB,GAAH,mBAAeG,EAAUpB,iB,EAOvCqB,mBAAqB,WACnB,MAA6B,EAAKpD,MAA1B2B,EAAR,EAAQA,OAAQI,EAAhB,EAAgBA,SACVsB,EAAmB1B,EAAO2B,cAEhC,OAAOvB,EAASJ,QAAO,SAAAqB,GAAO,OAC5BA,EAAQ/C,KAAKqD,cAAcC,SAASF,O,uDAIxC,WACE,IAAMtB,EAAWyB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAM7B,GAClCf,KAAKT,SAAS,CAAEwB,SAAU2B,M,gCAG5B,SAAmBG,EAAWV,GACxBnC,KAAKhB,MAAM+B,WAAaoB,EAAUpB,UACpCyB,aAAaM,QAAQ,WAAYH,KAAKI,UAAU/C,KAAKhB,MAAM+B,a,oBAI/D,WACE,IAAQJ,EAAWX,KAAKhB,MAAhB2B,OACFqC,EAAkBhD,KAAKoC,qBAC7B,OACE,sBAAKvC,UAAWC,IAAOmD,QAAvB,UACE,oBAAIpD,UAAWC,IAAOQ,MAAtB,uBACA,cAAC,EAAD,CAAaX,SAAUK,KAAK8B,oBAC5B,oBAAIjC,UAAWC,IAAOoD,cAAtB,sBACA,cAAC,EAAD,CAAQvC,OAAQA,EAAQC,cAAeZ,KAAKwB,mBAC3CwB,EAAgBG,OAAS,GACxB,cAAC,EAAD,CACEpC,SAAUiC,EACVhC,gBAAiBhB,KAAK4B,uB,GArEhBnB,aCFlB2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B3E,EAAOC,QAAU,CAAC,aAAe,kCAAkC,YAAc,iCAAiC,WAAa,mC","file":"static/js/main.1ec1d771.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__2Rh_f\",\"title\":\"App_title__-GfWs\",\"titleContacts\":\"App_titleContacts__41vwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"inputForm\":\"ContactForm_inputForm__2GJhT\",\"btnForm\":\"ContactForm_btnForm__RrRV0\"};","import { Component } from 'react';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.inputForm}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Number\n          <input\n            className={styles.inputForm}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={styles.btnForm} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nfunction Filter({ filter, onInputChange }) {\n  return (\n    <label className={styles.label}>\n      Find contacts by name\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onInputChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={styles.contactsList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={styles.contactItem}>\n          {name} --- {number}\n          <button\n            className={styles.btnContact}\n            onClick={() => onDeleteContact(name)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  handleNameChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  repeatName = newName => {\n    return this.state.contacts.find(({ name }) => name === newName);\n  };\n\n  deleteContact = oldName => {\n    this.setState({\n      contacts: this.state.contacts.filter(({ name }) => name !== oldName),\n    });\n  };\n\n  formSubmitHandler = (name, number) => {\n    if (!this.repeatName(name)) {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      };\n      this.setState(prevState => ({\n        contacts: [contact, ...prevState.contacts],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    this.setState({ contacts: parsedContacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={styles.wrapper}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2 className={styles.titleContacts}>Contacts</h2>\n        <Filter filter={filter} onInputChange={this.handleNameChange} />\n        {visibleContacts.length > 0 && (\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactList_contactsList__14Z-h\",\"contactItem\":\"ContactList_contactItem__EQAbQ\",\"btnContact\":\"ContactList_btnContact__1cPva\"};"],"sourceRoot":""}